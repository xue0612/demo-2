<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dt.xd.dao.mapper.XdShoppingMapper">
  <resultMap id="BaseResultMap" type="com.dt.xd.xdShopping.XdShopping">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="pro_id" jdbcType="INTEGER" property="proId" />
    <result column="buy_id" jdbcType="VARCHAR" property="buyId" />
  </resultMap>
  <resultMap id="BaseResultMap1" type="com.dt.xd.xdShopping.XdShow">
    <id column="id1" jdbcType="VARCHAR" property="id" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="pro_id" jdbcType="INTEGER" property="proId" />
    <result column="buy_id" jdbcType="VARCHAR" property="buyId" />
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="service_product" jdbcType="VARCHAR" property="serviceProduct" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="product_instruction" jdbcType="VARCHAR" property="productInstruction" />
    <result column="product_price" jdbcType="REAL" property="productPrice" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="ts" jdbcType="TIMESTAMP" property="ts" />
    <result column="sales_volume" jdbcType="INTEGER" property="salesVolume" />
    <result column="service_name" jdbcType="VARCHAR" property="serviceName" />
    <result column="recommend" jdbcType="VARCHAR" property="recommend" />
    <result column="high_quality" jdbcType="VARCHAR" property="highQuality" />
    <result column="username" jdbcType="VARCHAR" property="username" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, count, pro_id, buy_id
  </sql>
  
  <!-- 
  <select id="selectByOther" resultMap="BaseResultMap">
  	select * 
  	from xd_shopping,xd_product
  	where xd_shopping.id=xd_product.id
  </select>
   -->
 
 
  <select id="selectBoth" parameterType="java.lang.String" resultMap="BaseResultMap1">
  	select * from xd_shopping,xd_product where xd_shopping.pro_id = xd_product.id
  		 <!-- 将按照id查询改为按照产品名称查询 -->
  		<if test="id!=null  and  id!=''">
  		 and xd_product.product_name LIKE CONCAT('%','${id}','%')
  		</if>
  </select>
  
   <select id="getCount" parameterType="map" resultType="java.lang.Integer">
    select count(*) from xd_shopping  
    <if test="id!=null and id!=''">
    	where id like concat('%',#{id},'%')  
    </if>     
  </select>
  
  
  <select id="countByExample" parameterType="com.dt.xd.xdShopping.XdShoppingExample" resultType="java.lang.Long">
    select count(*) from xd_shopping
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <select  id="selectTwoTable" parameterType="com.dt.xd.xdShopping.XdShoppingExample" resultMap="BaseResultMap1">
  	select * from xd_shopping,xd_product where xd_shopping.pro_id = xd_product.id
  		<if test="_parameter!=null">
  			<include refid="Example_Where_Clause"></include>
  		</if>
  		<if test="id!=null  and  id!=''">
  			 and xd_product.product_name LIKE CONCAT('%','${id}','%')
  		</if>
  		<if test="pageStart>=0">
  		  limit ${pageStart},${pageSize}
  		</if> 
  		<if test="orderByClause!=null">
  			order by ${orderByClause}
  		</if>
  </select>
  
  <select  id="selectById" parameterType="com.dt.xd.xdShopping.XdShoppingExample" resultMap="BaseResultMap">
  	select 
  		<if test="distinct">
  		     distinct
  		</if>
  		<include refid="Base_Column_List"></include>
  		 from xd_shopping
  		<if test="_parameter!=null">
  			<include refid="Example_Where_Clause"></include>
  		</if>
  		<if test="id!=null  and  id!=''">
  			 where id LIKE CONCAT('%',${id},'%') 
  		</if>
  		<if test="pageStart>=0">
  		  limit ${pageStart},${pageSize}
  		</if> 
  		<if test="orderByClause!=null">
  			order by ${orderByClause}
  		</if>
  </select>
  
  <!-- 
    <select id="selectByExample" parameterType="map" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from xd_shopping
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
     <if test="id!=null and id!=''">
    	where id like CONCAT('%',#{id},'%')  
    </if>
    <if test="example.pageStart>=0">    
    	limit #{example.pageStart}, #{example.pageSize}
    </if>
    <if test="example.orderByClause != null">
      order by #{example.orderByClause}
    </if>
  </select>
    -->
  
  

  <select id="selectByExample" parameterType="com.dt.xd.xdShopping.XdShoppingExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from xd_shopping
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from xd_shopping
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from xd_shopping
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.dt.xd.xdShopping.XdShoppingExample">
    delete from xd_shopping
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dt.xd.xdShopping.XdShopping">
    insert into xd_shopping (id, count, pro_id, 
      buy_id)
    values (#{id,jdbcType=VARCHAR}, #{count,jdbcType=INTEGER}, #{proId,jdbcType=INTEGER}, 
      #{buyId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.dt.xd.xdShopping.XdShopping">
    insert into xd_shopping
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="proId != null">
        pro_id,
      </if>
      <if test="buyId != null">
        buy_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="proId != null">
        #{proId,jdbcType=INTEGER},
      </if>
      <if test="buyId != null">
        #{buyId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <!-- 
  <select id="countByExample" parameterType="com.dt.xd.xdShopping.XdShoppingExample" resultType="java.lang.Long">
    select count(*) from xd_shopping
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
   -->
  <update id="updateByExampleSelective" parameterType="map">
    update xd_shopping
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.count != null">
        count = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.proId != null">
        pro_id = #{record.proId,jdbcType=INTEGER},
      </if>
      <if test="record.buyId != null">
        buy_id = #{record.buyId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateById" parameterType="java.lang.String">
    update xd_shopping set count = ${count} where id = ${id}
  </update>
  <update id="updateByExample" parameterType="map">
    update xd_shopping
    set id = #{record.id,jdbcType=VARCHAR},
      count = #{record.count,jdbcType=INTEGER},
      pro_id = #{record.proId,jdbcType=INTEGER},
      buy_id = #{record.buyId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dt.xd.xdShopping.XdShopping">
    update xd_shopping
    <set>
      <if test="count != null">
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="proId != null">
        pro_id = #{proId,jdbcType=INTEGER},
      </if>
      <if test="buyId != null">
        buy_id = #{buyId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dt.xd.xdShopping.XdShopping">
    update xd_shopping
    set count = #{count,jdbcType=INTEGER},
      pro_id = #{proId,jdbcType=INTEGER},
      buy_id = #{buyId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>